Identified bottleneck in Account Statement Data Extraction, implemented a hashing solution to avoid reprocessing. Developed a block text extraction algo, was 6 times more cost-effective than the Key-Value extraction method in Textract,resulting in annual savings of $80,000.
>Tech used: Python fast api AWS Textract Pandas DynamoDB S3 Terraform Jenkins Docker ECR Boto3 GIT pytest
 
Automated month-end statements retrieval, sanitization, and backup for 15+ banks in Blackstone using 23 micro services, including banks JP Morgan, Bank of America, and Wells Fargo, saving 60 hours of manual work per month.
>Tech used: Python fast api AWS Textract Pandas DynamoDB S3 Kafka Typer EKS ECS Lambda SFTP Terraform Jenkins Docker ECR Boto3 GIT pytest
 
Designed and developed micro services for identity access, and accounting management in the Treasury Management System, enhancing disaster recovery processes and reducing downtime by 99%.
>Tech used: Python fast api AWS Textract Pandas DynamoDB S3 Typer EKS ECS Lambda SFTP Terraform Jenkins Docker ECR Boto3 GIT pytest
 
Identified repetitive boilerplate code and created project templates that streamlined development, resulting in a 20% efficiency gain in development process.
>Tech used: Python Jinja Templats
 
Developed treasury payment services for WSS V7 and V8 (Wall Street Suite)  with re-trigger and callback functionalities, incorporating audit capabilities to track payment types (ITC or non-ITC).
>Tech used: Python fast api AWS Textract Pandas DynamoDB S3 Typer ECS Lambda SFTP Terraform Jenkins Docker ECR Boto3
 
Created monitoring alerts in Splunk and Grafana, reducing response time for production issues by 60%.
>Tech used: Splunk, Grafana pagurduty
 
Developed Jenkins CI/CD pipelines for creating and uploading images to ECR and Artifactory, reducing manual deployment time by 10% and minimizing human error by 99%.
 Tech used: Jenkins GIT ECR
Identified and addressed issues in existing systems, transforming them into microservices to enhance reliability, reduce monolithic architecture, and cut production AWS infrastructure and deployment processes by 45%
>Tech used: Python fast api AWS Textract Pandas DynamoDB S3 Typer EKS ECS Lambda SFTP Terraform Jenkins Docker ECR Boto3 GIT pytest
 
Developed Docker images for Python microservices, enabling deployment on AWS Lambda, ECS, and EKS, and reducing deployment times by 50%.
 Tech used: Docker ECR jenkins
 
 
Developed numerous ETL services for Snowflake and AWS Redshift, along with a generative AI-powered dynamic web scraper, cutting development time by 60%.
Tech used: Python fast api AWS Textract Pandas DynamoDB S3 ECS Lambda Terraform Jenkins Docker ECR Boto3 GIT pytest redshift salanium butyfull supe AWS sage make