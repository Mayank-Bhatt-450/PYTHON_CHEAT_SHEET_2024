Identified bottleneck in Account Statement Data Extraction, implemented a hashing solution to avoid reprocessing. Developed a block text extraction algo, was 6 times more cost-effective than the Key-Value extraction method in Textract,resulting in annual savings of $80,000.
Python3.9, Tech Used:, FastAPI, Boto3, pytest, AWS Textract, S3, Pandas, DynamoDB, ECR, ECS, GIT, Docker, Terraform, Jenkins, React

Automated month-end statements retrieval, sanitization, and backup for 15+ banks in Blackstone using 23 micro services, including banks JP Morgan, Bank of America, and Wells Fargo, saving 60 hours of manual work per month.
Python3.9, Tech Used:, Boto3, pytest, S3, Pandas, DynamoDB, ECR, ECS, GIT, Docker, Terraform, Jenkins, Typer, Kafka, SFTP, Reactjs

Designed and developed micro services for identity access, and accounting management in the Treasury Management System, enhancing disaster recovery processes and reducing downtime by 99%.
Python3.9, Tech Used:, FastAPI, Boto3, pytest, S3, Pandas, DynamoDB, ECR, ECS, GIT, Docker, Terraform, Jenkins, Lambda, Secrets Manager

Identified repetitive boilerplate code and created project templates that streamlined development for Python code ,Terraform code, Docker and Jenkins Files creation, resulting in a 20% efficiency gain in development process.
Python3.9, Tech Used:, FastAPI, Jinja Templats


Developed treasury payment services for WSS V7 and V8 (Wall Street Suite)  with re-trigger and callback functionalities, incorporating audit capabilities to track payment types (ITC or non-ITC).
Python3.9, Tech Used:, Boto3, pytest, S3, Pandas, DynamoDB, ECR, ECS, GIT, Docker, Terraform, Jenkins, Typer, SFTP, Lambda, FastAPI

Created monitoring alerts in Splunk and Grafana, reducing response time for production issues by 60%.
Tech Used:, Splunk, Grafana, Pagerduty

Developed Jenkins CI/CD pipelines for creating and uploading images to ECR and Artifactory, reducing manual deployment time by 10% and minimizing human error by 99%.
Tech Used:, Jenkins, GIT, ECR

Identified and addressed issues in existing systems, transforming them into microservices to enhance reliability, reduce monolithic architecture, and cut production AWS infrastructure and deployment processes by 45%
Python3.9, Tech Used:, FastAPI, Boto3, pytest, S3, Pandas, DynamoDB, ECR, ECS, GIT, Docker, Terraform, Jenkins, Lambda, Secrets Manager


Developed Docker images for Python microservices, enabling deployment on AWS Lambda, ECS, and EKS, and reducing deployment times by 50%.
Tech Used: Docker


Developed numerous ETL services for Snowflake and AWS Redshift, along with a generative AI-powered dynamic web scraper, cutting development time by 60%.
Python3.9, Tech Used:, FastAPI, Boto3, pytest, S3, Pandas, DynamoDB, ECR, ECS, GIT, Docker, Terraform, Jenkins, Lambda, Secrets Manager, selenium, beautifulsoup, AWS Sage Maker, Chat GPT, React